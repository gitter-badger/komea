/*
* generated by Xtext
*/
grammar InternalEventDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.komea.events.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.komea.events.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.komea.events.dsl.services.EventDslGrammarAccess;

}

@parser::members {
 
 	private EventDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EventDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleEventFactory
entryRuleEventFactory 
:
{ before(grammarAccess.getEventFactoryRule()); }
	 ruleEventFactory
{ after(grammarAccess.getEventFactoryRule()); } 
	 EOF 
;

// Rule EventFactory
ruleEventFactory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventFactoryAccess().getGroup()); }
(rule__EventFactory__Group__0)
{ after(grammarAccess.getEventFactoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventProperty
entryRuleEventProperty 
:
{ before(grammarAccess.getEventPropertyRule()); }
	 ruleEventProperty
{ after(grammarAccess.getEventPropertyRule()); } 
	 EOF 
;

// Rule EventProperty
ruleEventProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventPropertyAccess().getAlternatives()); }
(rule__EventProperty__Alternatives)
{ after(grammarAccess.getEventPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleProperty
entryRuleSimpleProperty 
:
{ before(grammarAccess.getSimplePropertyRule()); }
	 ruleSimpleProperty
{ after(grammarAccess.getSimplePropertyRule()); } 
	 EOF 
;

// Rule SimpleProperty
ruleSimpleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimplePropertyAccess().getGroup()); }
(rule__SimpleProperty__Group__0)
{ after(grammarAccess.getSimplePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListProperty
entryRuleListProperty 
:
{ before(grammarAccess.getListPropertyRule()); }
	 ruleListProperty
{ after(grammarAccess.getListPropertyRule()); } 
	 EOF 
;

// Rule ListProperty
ruleListProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListPropertyAccess().getGroup()); }
(rule__ListProperty__Group__0)
{ after(grammarAccess.getListPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EventProperty__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventPropertyAccess().getSimplePropertyParserRuleCall_0()); }
	ruleSimpleProperty
{ after(grammarAccess.getEventPropertyAccess().getSimplePropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEventPropertyAccess().getListPropertyParserRuleCall_1()); }
	ruleListProperty
{ after(grammarAccess.getEventPropertyAccess().getListPropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EventFactory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__0__Impl
	rule__EventFactory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getGroup_0()); }
(rule__EventFactory__Group_0__0)?
{ after(grammarAccess.getEventFactoryAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__1__Impl
	rule__EventFactory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getGroup_1()); }
(rule__EventFactory__Group_1__0)?
{ after(grammarAccess.getEventFactoryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__2__Impl
	rule__EventFactory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getFactoryKeyword_2()); }

	'factory' 

{ after(grammarAccess.getEventFactoryAccess().getFactoryKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__3__Impl
	rule__EventFactory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getNameAssignment_3()); }
(rule__EventFactory__NameAssignment_3)
{ after(grammarAccess.getEventFactoryAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__4__Impl
	rule__EventFactory__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEventFactoryAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__5__Impl
	rule__EventFactory__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getEventsAssignment_5()); }
(rule__EventFactory__EventsAssignment_5)*
{ after(grammarAccess.getEventFactoryAccess().getEventsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEventFactoryAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EventFactory__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group_0__0__Impl
	rule__EventFactory__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getPackageKeyword_0_0()); }

	'package' 

{ after(grammarAccess.getEventFactoryAccess().getPackageKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group_0__1__Impl
	rule__EventFactory__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getPackageAssignment_0_1()); }
(rule__EventFactory__PackageAssignment_0_1)
{ after(grammarAccess.getEventFactoryAccess().getPackageAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getSemicolonKeyword_0_2()); }

	';' 

{ after(grammarAccess.getEventFactoryAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EventFactory__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group_1__0__Impl
	rule__EventFactory__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getPathKeyword_1_0()); }

	'path' 

{ after(grammarAccess.getEventFactoryAccess().getPathKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group_1__1__Impl
	rule__EventFactory__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getPathAssignment_1_1()); }
(rule__EventFactory__PathAssignment_1_1)
{ after(grammarAccess.getEventFactoryAccess().getPathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventFactory__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventFactory__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getSemicolonKeyword_1_2()); }

	';' 

{ after(grammarAccess.getEventFactoryAccess().getSemicolonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getEventAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_1()); }
(rule__Event__NameAssignment_1)
{ after(grammarAccess.getEventAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGroup_3()); }
(rule__Event__Group_3__0)*
{ after(grammarAccess.getEventAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Event__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3__0__Impl
	rule__Event__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getPropertiesAssignment_3_0()); }
(rule__Event__PropertiesAssignment_3_0)
{ after(grammarAccess.getEventAccess().getPropertiesAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getEventAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleProperty__Group__0__Impl
	rule__SimpleProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getTypeAssignment_0()); }
(rule__SimpleProperty__TypeAssignment_0)
{ after(grammarAccess.getSimplePropertyAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleProperty__Group__1__Impl
	rule__SimpleProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getNameAssignment_1()); }
(rule__SimpleProperty__NameAssignment_1)
{ after(grammarAccess.getSimplePropertyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getGroup_2()); }
(rule__SimpleProperty__Group_2__0)?
{ after(grammarAccess.getSimplePropertyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleProperty__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleProperty__Group_2__0__Impl
	rule__SimpleProperty__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getSimplePropertyAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleProperty__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getValueAssignment_2_1()); }
(rule__SimpleProperty__ValueAssignment_2_1)
{ after(grammarAccess.getSimplePropertyAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group__0__Impl
	rule__ListProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getTypeAssignment_0()); }
(rule__ListProperty__TypeAssignment_0)
{ after(grammarAccess.getListPropertyAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group__1__Impl
	rule__ListProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getLeftSquareBracketRightSquareBracketKeyword_1()); }

	'[]' 

{ after(grammarAccess.getListPropertyAccess().getLeftSquareBracketRightSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group__2__Impl
	rule__ListProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getNameAssignment_2()); }
(rule__ListProperty__NameAssignment_2)
{ after(grammarAccess.getListPropertyAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getGroup_3()); }
(rule__ListProperty__Group_3__0)?
{ after(grammarAccess.getListPropertyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListProperty__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3__0__Impl
	rule__ListProperty__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getListPropertyAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3__1__Impl
	rule__ListProperty__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getListPropertyAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3__2__Impl
	rule__ListProperty__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getValuesAssignment_3_2()); }
(rule__ListProperty__ValuesAssignment_3_2)
{ after(grammarAccess.getListPropertyAccess().getValuesAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3__3__Impl
	rule__ListProperty__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getGroup_3_3()); }
(rule__ListProperty__Group_3_3__0)*
{ after(grammarAccess.getListPropertyAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getRightCurlyBracketKeyword_3_4()); }

	'}' 

{ after(grammarAccess.getListPropertyAccess().getRightCurlyBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ListProperty__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3_3__0__Impl
	rule__ListProperty__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getListPropertyAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListProperty__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getValuesAssignment_3_3_1()); }
(rule__ListProperty__ValuesAssignment_3_3_1)
{ after(grammarAccess.getListPropertyAccess().getValuesAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__EventFactory__PackageAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getPackageQualifiedNameParserRuleCall_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getEventFactoryAccess().getPackageQualifiedNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__PathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getPathSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getEventFactoryAccess().getPathSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getEventFactoryAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventFactory__EventsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventFactoryAccess().getEventsEventParserRuleCall_5_0()); }
	ruleEvent{ after(grammarAccess.getEventFactoryAccess().getEventsEventParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__PropertiesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getPropertiesEventPropertyParserRuleCall_3_0_0()); }
	ruleEventProperty{ after(grammarAccess.getEventAccess().getPropertiesEventPropertyParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getTypeQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getSimplePropertyAccess().getTypeQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimplePropertyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getSimplePropertyAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getTypeQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getListPropertyAccess().getTypeQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getListPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__ValuesAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getValuesSTRINGTerminalRuleCall_3_2_0()); }
	RULE_STRING{ after(grammarAccess.getListPropertyAccess().getValuesSTRINGTerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__ValuesAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListPropertyAccess().getValuesSTRINGTerminalRuleCall_3_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getListPropertyAccess().getValuesSTRINGTerminalRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



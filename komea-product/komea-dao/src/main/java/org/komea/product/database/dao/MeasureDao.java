
package org.komea.product.database.dao;



import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.session.RowBounds;
import org.komea.product.database.dao.timeserie.TimeCoordinate;
import org.komea.product.database.dao.timeserie.TimeSerieOptions;
import org.komea.product.database.model.Measure;
import org.komea.product.database.model.MeasureCriteria;
import org.komea.product.database.model.MeasureKey;



public interface MeasureDao
{
    
    
    /**
     * This method builds a time serie from the history given a list of options. Basically the purpose of a time serie is to build charts.
     * A time serie is either global to the type of entities of a kpi or for a given entity (1 or all). TODO:: handle a list of entities .
     * 
     * @return a time serie object
     * @param _timeSerieOptions
     *            the time serie options.
     * @return the coordinates of the time serie
     */
    List<TimeCoordinate> buildTimeSeries(TimeSerieOptions _timeSerieOptions);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int countByCriteria(MeasureCriteria example);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int deleteByCriteria(MeasureCriteria example);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int deleteByPrimaryKey(MeasureKey key);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int insert(Measure record);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int insertSelective(Measure record);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    List<Measure> selectByCriteria(MeasureCriteria example);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    List<Measure> selectByCriteriaWithRowbounds(MeasureCriteria example, RowBounds rowBounds);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    Measure selectByPrimaryKey(MeasureKey key);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int updateByCriteria(@Param("record")
    Measure record, @Param("example")
    MeasureCriteria example);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int updateByCriteriaSelective(@Param("record")
    Measure record, @Param("example")
    MeasureCriteria example);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int updateByPrimaryKey(Measure record);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_msr
     * 
     * @mbggenerated Thu May 08 17:54:52 CEST 2014
     */
    int updateByPrimaryKeySelective(Measure record);
}

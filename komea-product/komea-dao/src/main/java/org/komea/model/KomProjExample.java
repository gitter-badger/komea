package org.komea.model;

import java.util.ArrayList;
import java.util.List;

public class KomProjExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public KomProjExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdProjectIsNull() {
            addCriterion("idProject is null");
            return (Criteria) this;
        }

        public Criteria andIdProjectIsNotNull() {
            addCriterion("idProject is not null");
            return (Criteria) this;
        }

        public Criteria andIdProjectEqualTo(Integer value) {
            addCriterion("idProject =", value, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectNotEqualTo(Integer value) {
            addCriterion("idProject <>", value, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectGreaterThan(Integer value) {
            addCriterion("idProject >", value, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectGreaterThanOrEqualTo(Integer value) {
            addCriterion("idProject >=", value, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectLessThan(Integer value) {
            addCriterion("idProject <", value, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectLessThanOrEqualTo(Integer value) {
            addCriterion("idProject <=", value, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectIn(List<Integer> values) {
            addCriterion("idProject in", values, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectNotIn(List<Integer> values) {
            addCriterion("idProject not in", values, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectBetween(Integer value1, Integer value2) {
            addCriterion("idProject between", value1, value2, "idProject");
            return (Criteria) this;
        }

        public Criteria andIdProjectNotBetween(Integer value1, Integer value2) {
            addCriterion("idProject not between", value1, value2, "idProject");
            return (Criteria) this;
        }

        public Criteria andKeyIsNull() {
            addCriterion("key is null");
            return (Criteria) this;
        }

        public Criteria andKeyIsNotNull() {
            addCriterion("key is not null");
            return (Criteria) this;
        }

        public Criteria andKeyEqualTo(String value) {
            addCriterion("key =", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotEqualTo(String value) {
            addCriterion("key <>", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyGreaterThan(String value) {
            addCriterion("key >", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyGreaterThanOrEqualTo(String value) {
            addCriterion("key >=", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLessThan(String value) {
            addCriterion("key <", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLessThanOrEqualTo(String value) {
            addCriterion("key <=", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLike(String value) {
            addCriterion("key like", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotLike(String value) {
            addCriterion("key not like", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyIn(List<String> values) {
            addCriterion("key in", values, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotIn(List<String> values) {
            addCriterion("key not in", values, "key");
            return (Criteria) this;
        }

        public Criteria andKeyBetween(String value1, String value2) {
            addCriterion("key between", value1, value2, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotBetween(String value1, String value2) {
            addCriterion("key not between", value1, value2, "key");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIdCustomerIsNull() {
            addCriterion("idCustomer is null");
            return (Criteria) this;
        }

        public Criteria andIdCustomerIsNotNull() {
            addCriterion("idCustomer is not null");
            return (Criteria) this;
        }

        public Criteria andIdCustomerEqualTo(Integer value) {
            addCriterion("idCustomer =", value, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerNotEqualTo(Integer value) {
            addCriterion("idCustomer <>", value, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerGreaterThan(Integer value) {
            addCriterion("idCustomer >", value, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerGreaterThanOrEqualTo(Integer value) {
            addCriterion("idCustomer >=", value, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerLessThan(Integer value) {
            addCriterion("idCustomer <", value, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerLessThanOrEqualTo(Integer value) {
            addCriterion("idCustomer <=", value, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerIn(List<Integer> values) {
            addCriterion("idCustomer in", values, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerNotIn(List<Integer> values) {
            addCriterion("idCustomer not in", values, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerBetween(Integer value1, Integer value2) {
            addCriterion("idCustomer between", value1, value2, "idCustomer");
            return (Criteria) this;
        }

        public Criteria andIdCustomerNotBetween(Integer value1, Integer value2) {
            addCriterion("idCustomer not between", value1, value2, "idCustomer");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table kom_proj
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 08 15:34:10 CET 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table kom_proj
     *
     * @mbggenerated Wed Jan 08 15:34:10 CET 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}